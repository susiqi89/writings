ps基础
  1、	图片缩放
    1）工具箱中的放大镜（默认放大，按住alt键缩小）
    2）ctrl+放大，ctrl-缩小
    3）按住alt键滚动鼠标滚轮
  2、	标尺
    1）ctrl+r	标尺的显示和隐藏
    2）“视图”菜单->“标尺”
  3、	图片移动
    1）工具箱中的“手形”工具
    2）按住空格键切换为图片移动工具
  4、	参考线
    1）“视图”菜单->“显示”->“参考线”
    2）ctrl+;
    从标尺上拖动鼠标左键，拉出参考线
    横向参考线和纵向参考线的切换按下alt键
  5、	信息面板
    F8	显示和隐藏信息面板
  6、	设置PS的单位
    “编辑”菜单->“首选项”->“单位和标尺”->将“标尺”、“文字”单位都设为“像素”
    像素：网页中的最小单位
  7、	切片工具（输入法在英文状态下）
    c	切片工具
    ctrl	切片选择工具和切片工具的临时切换
    shift+c	工具组内部切换（切片工具、裁剪工具切换）
    对网页结构进行划分（遵循1像素原则，逐级划分[先整体后局部，先上下后左右]）、图像的局部获取
  8、	保存切片(图像的局部获取)
    ctrl+shift+alt+s		
    文件->存储为web所用格式->预设中选择JPEG高->单击存储按钮->选择保存位置，选择格式（仅限图像）输入文件名（*.jpg）	切片（选中的切片）->保存即可
  9、	通过Ps导出网页
    ctrl+shift+alt+s		
    文件->存储为web所用格式->预设中选择JPEG高->单击存储按钮->选择保存位置，选择格式（HTML和图像）输入文件名（index.html）->保存即可
  10、	网页结构
    a)	嵌套结构（父子关系）
    b)	并列结构（兄弟关系）
    <div id=”header”></div>
    <div id=”banner”>
      <div class=”banner_inner”></div>
    </div>
    <div class=”clear”></div>
    #banner  .banner_inner{}
	

html
  1、	html超文本标记语言（hypertextr markup language）
    www万维网（world wide web）
    w3c万维网联盟
  2、	标签（标记）：构成网页的基本单位
    <标签名> [内容] </标签名>		双标签
    <标签名/>		单标签
    <标签名 属性名=”属性值” 属性名2=”属性值2”> [内容] </标签名>	双标签
  3、	新建一个html文档
    文件->新建->HTML（XHTML1.0 Transitional或HTML5）
  4、	html网页整体文件
    网页使用的是html语言，所有的网页代码都包含在html之间
  5、	head 
    网页的头部信息，网页的附属信息，其内容不会显示在网页中
  6、	meta声明编码标准（附属信息）
    网页的元信息，网页内部的语言编码（utf-8国际通用的编码标准）
  7、	title
    网页的标题（主题）
  8、	body
    网页的主体，所有在浏览器窗口中显示的内容，都在这对双标签内部
  9、	div
    搭建网页结构（框架）的基本标签（盒子）
    1）宽度100%（相对于父级盒，窗口有多大，宽度就有多大）
    2）高度自适应（内容有多高盒子就有多高）
    3）独立成行（默认垂直布局）
    4）浮动元素的父级盒需要给高度
  10、	img前景图
    <img src=”图片的路径” title=”图片标题” alt=”图片占位符” />
    前景图占位，可以撑开父级盒
    前景图可以被搜索引擎搜索到
    前景图属于网页内容，有实际意义，是必不可少的
    前景图写在网页结构中（body内部），书写时要紧贴div<div><img src=””/></div>
    前景图不可重复
  11、	h系列标签（用于网页标题，快捷键Ctrl+相对应的数字）
    h1~h6大小依次减小，重要程度也依次减弱（h1在同一个网页中只使用一次，其他标签可以重复使用）
    1)宽度100%
    2)高度自适应
    3）独占一行
    4）自带间距和加粗 
  12、	p段落标签（包含整段文字ctrl+shift+p）用于排版大篇文字
    1）宽度100%，高度自适应
    2）独占一行
    3）自带间距
  13、	br强制换行
    <br />
  14、	ul无序列表
    li列表项
    <ul>
      <li></li>
    </ul>
    ul与li宽度100%，高度自适应，自带留白、填充与列表符，独立成行
    清除自带列表符li{list-style:none;}
  15、	ol有序列表
    li列表项
    <ol  start="1" type="1" reversed=" reversed ">
      <li></li>
    </ol>
    start定义开始值
    type列表项的符号
    reversed=” reversed”倒序
  16、	dl用来定义术语的列表
    <dl>
      <dt>html5</dt>
      <dd>html5是超文本标记语言</dd>
    </dl>
    dt术语
    dd解释
  17、	a超链接标签（网页中超链接标记）
    <a href=”链接网址/文件” title=”标题” target=”_blank”></a>
    target=”_blank”在新的窗口中打开链接网页
    href超文本引用，用于指定的URL超链接目标
    a标签默认字体颜色为蓝色，自带下划线，访问过后字体颜色变为紫色（标签自带样式无法通过父级盒改变）；可以使用“#”作为网址的占位符，代表当前网页（跳转到本页顶部）；图片添加a标记之后，在（ie）浏览器下图片会自带描边
  18、	span万能标签
    一段文字中局部文字实现特殊效果，多个span横向布局；行级元素
  19、	标签的分类
    1）	块级标签（元素）
        独立成行（宽度100%，垂直显示）
        具有盒模型特征（有宽度和高度，有间距和留白，有边框）
        div、p、h1、h2、h3、h4、h5、h6、ul、li、form
    2）	行级标签（元素）
        不独立成行（宽度自适应，水平显示，换行会被解析为空格）
        具有部分盒模型特征（没有宽高[css定义宽高时无效]，有横向间距margin-right、margin-left和留白padding-left、padding-right，没有纵向margin-top、margin-bottom和留白padding- top、padding-bottom，边框保留） 
        换行会被解析（成空格）
        img、a、span、input、select、textarea、label
   20、	form表单标签（表单数据的容器）
    <form></form>所有的其他表单控件都要放到form中间，才能传到后台数据库，属于块级标签
    <form action="index.html接受表单内容的地址（服务器端地址）" method="表单提交方式" name="表单名称">
    method="get"提交时，会将表单内容附加在URL地址的后面，所以限制了提交的内容长度，不超过8192个字符，且不具备保密性
    method="post"提交时，将表单中的数据一并包含在表单主体中，一起传送到服务器中处理，没有数据大小限制,具有保密性
    a)	input输入表单元素
      <input type=”类型” value=”值”/>默认的值  有宽度和高度，背景，边框
      size=”控件长度（如：10）”
      maxlength=”文本最多字符数（如：10）”
      name=”标识（控件名称）”
        i.	<input type=”text” value=”值” placeholder=”占位名称” />单行文本框
        ii.	<input type=”password” value=”值” placeholder=”占位名称”/>密码框
        iii.	<input type="hidden" value="隐藏的内容">隐藏表单域
        iv.	<input type=”radio” value=”值” checked/>单选框（默认被选中）
        v.	<input type=”checkbox” value=”值” checked=”checked”/>复选框（默认被选中）
        vi.	<input type=”button” value=”按钮提示文本” />普通按钮
        vii.	<input type=”submit” value=”按钮提示文本” />提交按钮
        viii.	<input type=”reset” value=”按钮提示文本” />重置按钮（重置表单数据为默认值）
    b)	select下拉列表  name=”标识（控件名称）”  option列表项 
      <select name=”” >
        <option>选项1</option>
      </select>
    c)	textarea文本域（多行文本，一般用于留言板等需要输入大量文本的位置）
      <textarea>提示信息</textarea>
      <textarea cols="35" rows="10"></textarea>
      cols="35" 宽度
      rows=”10” 行数
    d)	label 表单标注
      <label>内容</label>
  21、	iframe内联框架（行内框架）
    <iframe src=”默认链接网页” name=”框架名”></iframe>
  22、	pre预定义文本（被包含在pre中的元素通常会原样输出，保留空格和换行）
    <pre>文本内容</pre>
  23、	特殊符号：
    ©版权符号：&copy;
    空格：&nbsp;
    <：&lt;
    >：&gt;
    ¥：&yen;
    ®：&reg;
  24、	frameset框架（h5中不支持frame框架）
    不需要body直接写在head之后
    <html>
      <head></head>
      <frameset cols=”*,*”>
        <frame />
        <frame />
      </frameset>
    </html>
  25、	table表格
    a)	caption标题
      <caption>表格标题</caption>
    b)	tr 行
    c)	th表头
    d)	td单元格
    <table >
	    <caption>表格标题</caption>
       <tr>
    	  <th>班级</th>
    	  <th>姓名</th>
    	  <th>年龄</th>
      </tr>
      <tr>
    	  <td>1602</td>
        <td>姚同学</td>
        <td>18</td>
      </tr>
    </table>
    cellspacing单元格之间的间距，默认是2px
    cellpadding单元格内容与单元格边框的显示距离，单位像素
  	

三、选择器（找对象，定义样式表）
  1、标签选择器(标记选择器)
    <标签名></标签名>   结构中
    标签名{[样式]}    样式中
    div{} 针对body里面所有的div标记
  2、id选择器 (一般情况下用于一级拆分，具有唯一性)
    <标签名 id=”id名”></标签名>   结构中
    #id名{[样式]}    样式中
  3、class选择器（类选择器，用于二级或者二级以上拆分，有相同样式时，可重复使用）
    <标签名 class=”class名”></标签名>   结构中
    .class名{[样式]}    样式中
  4、群组选择器（把相同的样式统一定义）
    选择器1,选择器2,选择器3,……,选择器n{[样式]}
    建议一级盒使用id选择器，二级及二级以上的盒使用class选择器；id选择器具有唯一性，class选择器重复使用
    命名规则：
      1）类名尽量有含义
      2）类名必须以英文开头，只能包含英文、数字、-(减号)、_（下划线）
      3）除减号与下划线之外的特殊符号不容许使用（空格等）
      4)不能使用中文汉字、纯数字，不能以数字开头
      5）id的名字在本页面只能出现一次，class可以重复使用
  5、*通配符选择器(页面中所有标签都会生效)
    *{margin:0;/*去掉所有间距*/  padding:0;/*去掉所有填充 */}
  6、后代选择器
    先辈选择器A 后辈选择器B{[样式]}
    在选择器A区域内的所有选择器B全部生效
  7、父子选择器
    父选择器>子选择器
    body>div
  8、伪类选择器
    a:link{链接的默认样式}
    a:visited{链接访问过后样式}
    a:hover{鼠标悬停到链接上的样式}
    a:active{鼠标按下时的样式}
    a{color:red;}四个伪类状态都生效
    L-V-H-A

  父亲盒内的第n个元素（只能用于一组相同的标记）
    选择器:first-child{}  一组元素中的第1个子元素（父级元素中子集元素的第一个）
    选择器:last-child{}   一组元素中的最后1个子元素
    选择器:nth-child(n){}   一组元素中的第n个子元素
    选择器:nth-child(2n){}或选择器:nth-child(even){}   一组元素中的偶数个子元素
    选择器:nth-child(2n+1){}或选择器:nth-child(odd){}  一组元素中的奇数个子元素
    选择器:nth-last-of-type(2){}   从最后一个开始数第2个
    选择器:first-line{}    一段文本中的第1行
    选择器:first-letter{}    一段文本中的第1个字（字母）
  9、伪元素选择器
    1）选择器名:before 在选择器内部，内容之前插入新的内容
      选择器名:before{content:’增加的内容’}
    2）选择器名:after 在选择器内部，在内容之后插入新的内容
      选择器名:after{content:’增加的内容’}
  10、div+p    紧接在div元素之后的所有p元素
  11、input:focus    获取input的焦点，类似于input的点击事件
	  eg.  input:focus{width:150px;}
  12、Attribute Selector
	  eg.  <div data-modal=”open”></div>
		  [data-modal=”open”]{}

css样式——cascading style sheet层叠样式表 选择器{属性:值}
  1、样式类型
    1）内部样式（嵌入式）
      在head标签内部</head>之前，增加
      <style type=”text/css”>
        [样式内容]
      </style>
    2）外部样式 （引入式 html文件与css文件都是相互独立的文件）
      1、新建css文件，保存到网站目录中的css文件夹中
      2、将网页中的<style>中的所有内容剪切到新建的css文件中(要把style标签对删除)
      3、把新建的css文件关联到网页中（<link href=“css的保存的位置（路径）” rel=“stylesheet” type=“text/css”/>）
    3）行内样式   (内链样式)
      <body style=”background=’red’;border=’1px solid red’”></body>
  2、width    宽度
    width:100px;
    min-width:npx;最小宽度（不超过或小于npx）
    max-width:npx;最大宽度（不超过npx）
  3、height    高度
	  height:100px;
  4、float    浮动（脱离正常[标准]文档流，文档水平布局，不占位）
    float:left;    左浮动
    float:right;    右浮动
    1）要做水平布局每个盒都要加浮动,浮动元素为并列关系
    2）浮动元素组的宽度之和不能大于父级盒的宽度，否则最后一个浮动盒会被挤到下一行（若没有宽度，则宽度变为自适应，由内容撑开）
    3）元素浮动后，不占位，父级盒要有一定的高度
    4）元素浮动后，如果没有宽度，则宽度变为自适应（由内容撑开）
    5）浮动元素都是并列关系 
  5、margin    外间距（盒外属性，2个盒的距离）
    margin:0 auto;    盒居中（固定宽度且居中，一般居中盒要设置固定的宽度）
    margin:10px;    盒子的上、下、左、右各10px的边距
    margin在垂直方向使用的时候，会使父级盒整体向下移动，因此一般垂直方向不用margin
  6、padding内填充（盒内占位空间）
    padding:0;    
    padding-top:10px;上填充
    padding-right:20px;右填充
    padding-bottom:30px;下填充
    padding-left:40px;左填充
    padding所产生的间距效果和margin可以通用，但在垂直方向，建议使用padding，盒子有边框或背景的时候，使用padding不能达到区块分离的效果，还需要使用margin
    注意：
      1）使用padding后，如果原区块设置了宽度和高度，相应的方向使用padding后，要进行相应的宽度/高度减值
      2）如果宽度没有设置值（100%），无需进行相应的padding宽度减值
    盒模型：（包括margin、padding、border、width、height）
      盒高=height（内容高）+padding-top（上留白）+padding-bottom（下留白）+border-top（上边框）+border-bottom（上边框）
      盒宽=width（内容宽）+padding-left（左留白）+padding-right（右留白）+border-left（左边框）+border-right（右边框）
  7、background-color背景颜色
    1）为十六进制色值：background-color:#e7e7e7;
    2）颜色英文单词：background-color:red;
      red红色、green绿色、blue蓝色、yellow黄色、pink粉色、orange橘黄色、black黑色、white白色、purple紫色、tomato西红柿、gold金色、gray灰色
    3）background-color:rgba(0,0,0,0.5)
      r-red(0-255)红色
      g-green(0-255)绿色
      b-blue(0-255)蓝色
      a-alpha(0-1)不透明度
    4）background-color:transparent;背景色透明
  8、background-image
    1)background-image:url(图片路径);背景图片
      背景图片不占位
      默认背景图片在水平和垂直方向重复平铺
      背景图片会铺满盒的整个区域范围
      背景图是网页的装饰，只是美化作用
      背景图写在样式中（style中）
      背景图搜索引擎搜不到
      图片名称可以是英文或英文与数字的混合，但不能是中文
      多重背景：（css3）
         background:url(*.jpg) no-repeat, url(*.jpg) no-repeat;中间用逗号分隔
    2）background-repeat背景图重复
      background-repeat:no-repeat;不重复
      background-repeat:repeat-x;水平方向重复
      background-repeat;repeat-y;垂直方向重复
    3)	backgaround-position背景图定位
      background-position:水平方向 垂直方向（水平方向和垂直方向各一个值）
        水平方向：left  center  right  数值（盒内移动用正值，盒外移动用负值）
        垂直方向：top  center  bottom  数值（10px）
      background-position:rignt -5px bottom 20px; 背景图相对于右侧向外5px，底部距离背景图20px(负值向盒外，正直向盒内)
    4）background-size:;背景图尺寸
      background-size:宽度 高度;
      background-size:100px 100px;(只写一个值为等比例缩放)
      background-size:100% 100%;(图片显示为全屏)
      background-size:cover;(覆盖，等比例缩放到铺满，背景图片可能无法完整显示在背景区域中，背景图片扩展足够大使背景图片完全覆盖背景区域)
      background-size:contain;(包含，等比例缩放图片必须完整显示，背景图片在区域内能够完整显示但区域内铺不满，将图片扩展到相应的尺寸适应内容区域)
    5）background-image:linear-gradient();线性渐变
      background-image:linear-gradient(方向，颜色1 范围1，颜色2 范围2);
        方向：top、bottom(90deg从下到上)、left(0deg从左向右)、right、ndeg(n为数值，正值为逆时针方向)、left bottom(45deg从左下到右上)
      background-image:-moz-linear-gradient(45deg,red 20%,yellow 50%，green 100%);
        20%之前为红色，20%~50%为红色到黄色的渐变，50%~100%为黄色到绿色渐变
    6）background:radial-gradient();径向渐变
       background:-moz-radial-gradient(中心位置，颜色1 范围1，颜色2 范围2);
        中心位置：left top、left bottom、left center，x(水平方向偏移npx) y(垂直方向偏移npx)
  9、border边框
    border:1px red solid;边框的宽度1px，颜色红色，实线
    border-top:1px red solid;
    border-right：1px red solid;
    border-bottom:1px red solid;
    border-left:1px red solid;
    border-top:none;
    线型：实线solid  虚线（点线dotted，条状线dashed）  双线double
 
    border-image:url(*.jpg) 图片边框向內偏移 边框宽度 边框图像区域超出边框的量 图像边框是否平铺
      图像边框是否平铺：平铺repeat、铺满round（顺时针方向）、拉伸stretched
	    -moz-border-image: url(images/main_pic34.jpg) 0 14 0 14 stretch; /* 老版本的 Firefox，新版本不能显示 */
	    -webkit-border-image: url(images/main_pic34.jpg) 0 14 0 14 stretch; /* Safari */
	    -o-border-image: url(images/main_pic34.jpg) 0 14 0 14 stretch; /* Opera */
	    border-image: url(images/main_pic34.jpg) 0 14 0 14 stretch;
  10、border-radius圆角
    border-radius:50%;圆形
    border-radius:10px 20px 30px 40px;盒子的左上角10px,右上角20px，右下角30px，左下角40px
  11、text-align文本（图片）水平对齐方式
    text-align:left;左对齐
    text-align:center;居中对齐
    text-align:right;右对齐
    text-align:justify;实现两端对齐的文本效果+
    text-justify:inter-word;增加或减少单词间的间隔
  12、line-height行高（一行文字所占的高度）
    一行文字在特定容器中垂直居中，文字行高等于容器的高度
    文字设置行高后，会在行高范围内垂直居中(撑不起盒高)
  13、font-family字体
    1）多个字体中间使用逗号分隔，后面字体属于备用字体
    2）字体名称中间有空格，需要在字体名称上加引号
    3）中英文混排的段落文字，英文字体要放在前面（font-family:Arial “微软雅黑 ”）
    4）默认：Arial、宋体、黑体、微软雅黑
  14、font-size字体尺寸(字号,浏览器默认字号16px,网页正文默认12px、14px)
    单位：px像素（建议使用偶数）
  15、text-transform字体转换（英文文字大小写）
    text-transform:uppercase;全部大写
    text-transform;lowercase;全部小写
    text-transform:capitalize;首字母大写
  16、color字体颜色
    color:#fff;
    color:red;
  17、font-weight字体加粗
    font-weight:bold;加粗(相当于700)
    font-weight:normal;正常(相当于400)
    font-weight:900;文字加粗到900
  18、font-style字体形状
    font-style:normal;正常
    font-style:italic;倾斜（简单的字体风格对每个字母结构有小改动）
    font-style:oblique;文本倾斜显示（正常竖直文本的倾斜版本）
  19、text-decoration文本装饰
    text-decoration:none;取消下划线
    text-decoration:underline;显示下划线
    text-decoration:line-through;删除线
    text-decoration:overline;显示上划线
  20、text-indent首行缩进n个px
    text-indent:npx;
  21、font-variant设定小型大写字母
    font-variant:small-caps;采用不同大小的大写字母
  22、word-spacing字间隔(改变汉字/单词间的标准间隔)
    word-spacing:npx/nem(normal/0);
  23、letter-spacing字母/字符间的间隔
    letter-spacing:npx/nem;
  24、white-space:normal;丢掉多余的空白符（排版方式设置值）
    white-space:pre;内容原样显示
    white-space:norwap;不换行显示（强制不换行）
  25、word-wrap:break-word;针对网址强制换行
  26、font:斜体 加粗 字号/行高 字体;
    font:italic bold 14px/24px Arial;
  27、list-style列表符
    list-style:none;清除ul自带的列表符
  28、display显示为
    display:block;转换为块级元素（显示 ）
    display:inline;转换为行级元素(在一行显示，支持宽高，换行有空格)
    display:inline-block;对外显示为行级元素，本身可以设置宽、高、留白，保留块级元素的特征
    display:none;隐藏
    display:table; 此元素会作为块级表格来显示（类似 <table>），表格前后带有换行符。
    display:inherit; 规定应该从父元素继承 display 属性的值。
  29、position定位技术（网页中出现覆盖关系，优先考虑使用定位技术）
    a) position:relative;相对定位（还可以用于微调）
      相对定位盒仍然占位；
      相对于原来的位置可以发生偏移，偏移距离可以通过left/right，top/bottom来进行设置
    b) position:absoluet;绝对定位
      绝对定位盒不再占位；
      当盒设置为绝对定位后，其宽度变为自适应
      默认绝对定位盒是相对于浏览器窗口的四个角为坐标原点进行定位，可以通过left/right，top/bottom四个属性进行精确定位，盒内为正，盒外为负；
      绝对定位盒相对于最近的设置为相对定位的祖先盒（父辈盒）为参照进行定位，可以通过left/right,top/bottom四个属性中的两个之进行精确定位；
      绝对定位的步骤：
        1）为要做特殊定位的盒子用：position:absolute;
        2）为定位盒子的父级盒（有固定宽width高height）应用：position:relative;
        3）回到定位盒子上，通过top,bottom,left,right中的2个（横向一个，纵向一个）进行位置的定位
    c) position:fixed;固定定位
      固定定位不占位；
      宽度会变为自适应；
      相对于浏览器的四个角为原点进行定位；不随页面内容而滚动
      后加载的定位元素默认会覆盖先加载的定位元素，可以通过z-index属性来设置定位盒的叠放次序，z-index值越大，叠放层次越高
  30、z-index定位元素的叠放次序
    1）z-index只对定位元素（position）生效
    2）z-index越大，叠放次序越高
    3）z-index没有单位（正值向上调级，负值向下调级）
  31、vertical-align行级元素垂直对齐方式
    vertical-align:top;顶端对齐
    vertical-align:middle;居中对齐
    vertical-align:bottom;底端对齐
  32、box-shadow盒阴影
    box-shadow:x轴偏移量 y轴偏移量 阴影羽化值 [阴影的大小] 颜色色值
    box-shadow:10px 5px 15px [10px] #fff;
    box-shadow:10px 5px 15px [10px] #fff inset;盒内阴影
  33、text-shadow文字阴影
    box-shadow:x轴偏移量 y轴偏移量 颜色色值
  34、transform变形动画
    1）transform:rotate(45deg);旋转45deg(正值顺时针旋转，负值逆时针旋转)
    2）transform:scale(0.8,2);缩放，x轴缩小，y轴扩大2倍（0-1为缩小，1以上为放大，若x轴和y轴的缩放比例一致可以直接用一个值代替）
       transform:scaleX();沿x轴缩放
       transform:scaleY();沿y轴缩放
    3）transform:skew(45deg,0);倾斜,沿x轴倾斜45deg
    4）transform:translate(x,y);位移，水平方向向右为正，垂直方向向下为正
       transform:translateX();transform:translateY();
  35、transition状态过渡动画
    transition:css样式 时间1 类型时间2
    css样式：产生过渡动画的样式范围 all-所有样式 width只有宽度有过渡效果
    时间1：动画的执行时间（linear匀速，ease平滑，ease-in加速，ease-out减速，ease-in-out先加速后减速）
    时间2：动画延迟时间
  36、关键帧动画
    1）定义动画
      @keyframes 动画名称（英文）{
        0%{}
        50%{}
        100%{}
      }
    2）引用动画
       animation:动画名称 动画执行时间 动画类型 延迟时间 循环
         循环：n-循环n次，infinite动画无限循环
         animation-delay延迟时间
  37、opacity元素的不透明度
      opacity:0.5;(取值范围0-1)
  38、cursor鼠标指针
      cursor:text;显示为I形|
      cursor:pointer;显示为手形
      cursor:move;显示为可移动
      cursor:wait;显示为程序正在忙（通常是一只表或沙漏）
      cursor:help;显示为帮助（通常是一个问号或气球）
      cursor:url(images/mouese.png),default;显示为图片
	-ms-cursor:url(images/mouese.png),default;
      注释：请在此列表的末端始终定义一种普通的光标，以防没有由 URL 定义的可用光标。	default默认光标（通常是一个箭头）


导航的结构特征：
    ul-导航容器，负责导航整体结构布局
    li-导航项，一般负责水平布局，需要使用浮动，另外也会设置宽度或间距（填充）
    a-导航文字，一般所有文字样式都加到a上，有时也会设置宽度或间距（填充），当链接的区域范围需要扩大时，可以把a转为块级元素（display:block;），给行高和宽度
    <ul>
        <li><a href=”#”>首页</a></li>
    </ul>
  1) 等宽度[宽度一致]（子导航的宽度是相等的）
    li{float:left;width:100px;}
    a{font-size:12px;color:red;display:block;line-height:24px;}
  2) 等间距[留白一致]（子导航的宽度不一，每个导航之间的距离是相等）
    li不能定义宽度，给li添加padding或者margin，浮动（float:left;）
    
路径的应用：
  1) 绝对路径：http://www.hxsd.com 站外链接
  2) 相对路径：站内链接
      返回上级目录：../
  3) 锚点技术：
      a) 下锚(定义锚点，跳转的目的地)<a name=”锚点名”></a> <a id=”锚点名”></a> 
      b) 锚点链接<a href=”#锚点名”></a>
      c) 邮件地址链接（跳转到邮箱服务器）
        <a href=”mailto:邮箱地址”></a>调用本地邮件客户端
	
盒子的绝对居中：
    1) position:absolute;left:0;top:0;right:0;bottom:0;margin:auto;
    2) position:absolute;left:50%;top:50%;transform:translate(50%,50%);
    
css sprite精灵技术: 
    1) 制作一张具有多个状态的拼合图片
    2) 给要显示的盒有限的尺寸(宽度和高度)，通过背景图片的方式加载进来
    3) 通过改变背景图的定位（background-position）控制不同状态的显示.


五、 html5标签
  1. header网页头部区（一种具有引导和导航作用的结构元素可以包含hgroup、nav）
  2. nav网页导航区(内页导航、传统导航、侧边栏导航、翻页操作)
  3. article文章(独立内容可以包含header)
  4. aside侧边栏
  5. section文档章节（相对比较独立的一组内容可以包含header）
  6. footer网页底部区
  7. hgroup标题组（包含多个标题把h1~h6的元素进行分组）
  8. time时间日期
    <time pubdate=”pubdate” datetime=”2016-03-24”>2016年3月24日</time>
      time元素中包含pubdate属性，表示当前内容的发布时间
  9. video视频
    <video src=”视频文件路径” controls autoplay></video>
      controls控制面板（视频的播放和暂停）
      autoplay自动播放
  10. audio声音
    <audio src=”声音文件路径” controls autoplay></audio>
  11. address 元素用来在页面中显示联系信息，如文档的作者、邮箱、地址、电话信息等
  12. figure 表示页面上一块独立的内容，如果从页面上删除不影响页面整体效果
  13. figcaption属于figure元素，必须写在figure元素内部，一个figure元素内最多只允许放置一个figcaption元素
    <figure>
       <img src="" title="风景">
       <img src="" title="风景">
       <figcaption>风景</figcaption>
    </figure>
  14. details 用于标识元素内部的子元素可以被展开、收缩显示的元素
  15. summary从属于details元素，用鼠标点击summary元素中的内容文字时，details元素中的其他所有从属元素将会展开或收缩（只在谷歌浏览器显示）
  16. mark页面中突出显示或高亮显示，目的吸引用户
    <p>路上的飞机上<mark>圣诞节</mark>路上看见</p>
  17. progress代表一个任务的完成进度
    <progress max="100" value="85"></progress>
  18. meter 规定范围内的数量值
    <meter value="43.9" max="119" min="0" low="50" high="70" optimum="71"></meter>
    <meter value="43.9" max="119" min="0" low="50" high="70" optimum="49"></meter>
    <meter value="43.9" max="119" min="0" low="50" high="70" optimum="50"></meter>
  19. canvas绘图
    a) 绘制矩形
      i. 创建画布：指定id、width(画布宽度)、height(画布高度)
          <canvas id="canvas" width="500" height="350"></canvas>
          创建一个画布，长度为500，高度为350
      ii. 引入脚本：<script type="text/javascript" src="js/canvas.js" charset="utf-8"></script>
          引入一个名为canvas.js的js脚本，语言编码为utf-8
      iii. body的属性中，使用onLoad="draw('canvas')"调用脚本文件中的draw函数进行图形的绘制
      iv. 获取canvas元素
         用getElementById获取canvas对象
      v. 获取上下文
         在绘制图形时要用图形上下文（一个封转了很多绘图功能的对象），使用canvas对象的getContext()方法获得图形上下文，在draw函数中把参数设置为“2d”
      vi. 填充与绘制过程
         绘制的两种方法：填充（fill将图形内部填满）、绘制边框（stroke不把图形内部填满，只是绘制图形的外框）
      vii. 设置绘制样式
         调用相关方法进行绘制：fillStyle（填充的样式，在本属性中设置填入的填充颜色值）、strokeStyle（图形边框的样式，在本属性中设置填入边框的填充颜色）
     viii. 指定画笔的宽度
         通过上下问对象（context）的lineWidth属性来设置图形边框的宽度
     ix. 设置颜色值
         16进制的颜色值、颜色名、rgb(rgba(0,0,0))、rgba(rgba(0,0,0,0.1))
     x. 绘制矩形
         context.filRect(x,y,width,height)填充方法
         context.strokeRect(x,y,width,height)
         x指矩形的起点坐标，y矩形的终点坐标，坐标原点时canvas画布的左上角，width为矩形的长度，height为矩形的高度
    b) 绘制圆形
      i. 开始创建路径
         使用图形上下文对象的beginPath方法：context.beginPath();
      ii. 创建图形路径
         创建图形路径时，查看使用图形上下对象的arc方法
         context.arc(x,y,radius,starAngle,endAngle,anticlockwise)
         x绘制图形的起点坐标，y终点坐标，radius圆形半径，starAngle开始的角度，endAngle结束的角度，anticlockwise是否按顺时针方向绘制（布尔值true）
         var radius=degrees*Math.PI/180  Math.PI表示的角度时180度，Math.PI*2的角度是360度
      iii. 创建完成关闭路径

    c) 绘制文字
      使用text方法或strokeText方法
      i. Text方法用填充的方法绘制字符串
         context.fillText(text,x,y,[maxwidth])
      ii. strokeText方法用轮廓的方法绘制字符串
         context.strokeText(text, x,y,[maxwidth])
         text表示要检测的文字，x表示要绘制文字的起点横坐标，y表示要绘制的文字起点纵坐标，maxwidth为可选参数，表示显示文字的时候最大的宽度，可以防止文字溢出
         context.font = “font-weight font-size font-family”;
         context.textBaseline = ‘alphabetic’;(top顶部对齐，hanging悬挂，middle中间对齐，bottom底部对齐，alphabetic默认值)
         context.textAlign = ‘start’
	 
非主流字体的应用（英文字体）
  1）定义字体
    @font-face{
      font-family:”字体英文名称”;（不可以使用已有的主流字体名称）
      src:url(“字体路径1”),url(“字体路径2”)
    }
  2）使用字体
    font-family:”字体英文名称”;
    
网络英文字体应用:
  1）下载对应的字体
  2）在www.font2web.com或www.fontconverter.org/网站对字体进行转换
  3）将fonts文件夹与fonts.css拷贝到网站目录
  4）在应用字体的网页中导入fonts.css文件
  5）直接应用已经定义好的字体#box{font-family:”定义字体名称”;}
  
图标字体的使用:
  1）将fonts文件夹拷贝到网站目录
  2）将font-awersome.min.css文件拷贝到网站的css文件夹中
  3）在应用字体图标的网页中导入font-awesome.min.css
  4）在网页中指定图标应用 ‘类名fa-图标名称’，同时需要定义icon{font-family:”图标字体名称”}，并应用到指定图标上
  5）可以在图标上应用其他类名指定字体大小颜色
  
样式属性浏览器兼容前缀:
  -moz-火狐浏览器
  -webkit-谷歌浏览器
  -ms-IE浏览器
  -o-欧朋浏览器

媒体查询:
  @media screen and (max-width:980px){[样式]}
    对屏幕尺寸进行检测，同时根据屏幕尺寸变化来进行样式属性值的变化



